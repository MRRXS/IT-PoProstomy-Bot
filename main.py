import re

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

# —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token='6000075779:AAGOY0xmq5MK9BnDK3qz3opR91qtu6dmvi4')
dp = Dispatcher(bot)

text_help_commands = """
<b>
    –ë–∞–∑–æ–≤—ñ
/start - —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
/help - –∫–æ–º–∞–Ω–¥–∞, –≤ —è–∫—ñ–π —î —Å–ø–∏—Å–æ–∫ –≤—Å—å–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É –±–æ—Ç–∞
/description - –æ–ø–∏—Å –±–æ—Ç–∞
        
        –í–∑–∞—î–º–æ–¥—ñ—ó—ó —ñ–∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
–ø—ñ—Ç–∏ –ø–æ–≥—É–ª—è—Ç–∏ - –ø—ñ—Ç–∏ –ø–æ–≥—É–ª—è—Ç–∏ —ñ–∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
–ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏ - –ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
–æ–±—ñ–π–Ω—è—Ç–∏ - –æ–±—ñ–π–Ω—è—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
–ø—Ä–∏–∂–∞—Ç–∏ - –ø—Ä–∏–∂–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
–¥–∞—Ç–∏ —à–æ–∫–æ–ª–∞–¥–∫—É - –¥–∞—Ç–∏ —à–æ–∫–æ–ª–∞–¥–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
–∫–æ—Ö–∞—é - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∫–æ—Ö–∞—î —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
—Å—ñ—Å—Ç–∏ –Ω–∞ –∫–æ–ª—ñ–Ω–∞ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—ñ–¥–∞—î –Ω–∞ –∫–æ–ª—ñ–Ω–∞ —ñ–Ω—à–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
–ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏ –∑–∞ —à–∏—é - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ü—ñ–ª—É—î —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ —à–∏—é
–∑–∞—Å–æ—Å–∞—Ç–∏ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Å–æ—Å–∞–≤ —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
–¥–æ–±—Ä–∞–Ω—ñ—á - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–±–∞–∂–∞–≤ –Ω–∞–¥–æ–±—Ä–∞–Ω—ñ—á –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
–¥–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∫–∞–∑–∞–≤ –¥–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
       
       –í–∞—î–º–æ–¥—ñ—ó —ñ–∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º 18+
—Ä–æ–∑–¥—è–≥–Ω—É—Ç–∏ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–∑–¥—è–≥—É—î —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
—Ä–æ–∑–¥—è–≥–Ω—É—Ç–∏—Å—å - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–∑–¥—è–≥–∞—î—Ç—å—Å—è –ø–µ—Ä–µ–¥ —ñ–Ω—à–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
—Ç—Ä–∞—Ö–Ω—É—Ç–∏ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç—Ä–∞—Ö–∞—î —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
–≤—ñ–¥—Å–º–æ–∫—Ç–∞—Ç–∏ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥—Å–º–æ–∫—Ç–∞–≤ —ñ–Ω—à–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
–≤—ñ–¥–ª–∏–∑–∞—Ç–∏ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥–ª–∏–∑–∞–≤ —ñ–Ω—à–æ–º—É 
–ø–æ–¥—Ä–æ—á–∏—Ç–∏ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–¥—Ä–æ—á–∏–≤ —ñ–Ω—à–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
</b>
"""
@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
async def on_new_chat_members(message: types.Message):
    new_members = message.new_chat_members
    for member in new_members:
        await bot.send_message(chat_id=message.chat.id,
                               text=f"–õ–∞—Å–∫–∞–≤–æ –ø—Ä–∏—Å–æ–º—É —É —á–∞—Ç! {member.first_name}!")
# —Ä—è–¥ –ø—Ä–æ—Å—Ç–∏—Ö –∫–æ–º–∞–Ω–¥
@dp.message_handler(commands=['description'])
async def description_commands_bot(message: types.Message):
    description_text = "<b>–ü—Ä–∏–≤—ñ—Ç, –º–µ–Ω–µ –∑–≤–∞—Ç–∏ SXCLOUD, —ñ —è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç, –º—ñ–π —Å–µ–º–ø–∞–π —Ü–µ MRXXV</b>"
    await message.reply(description_text, parse_mode=types.ParseMode.HTML)
    await message.delete()
@dp.message_handler(commands=['help'])
async def help_commands_mrxxv(message: types.Message):
    await message.reply(text_help_commands, parse_mode=types.ParseMode.HTML)
    await message.delete()
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    text = "<b>–ü—Ä–∏–≤—ñ—Ç, —Ü–µ –±–æ—Ç MRXXV, –≤–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å —ñ–∑ –π–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º –≤ /help</b>"
    await message.answer(text, parse_mode=types.ParseMode.HTML)
    await message.delete()



# —Ä—è–¥ –∫–æ–º–∞–Ω–¥ –≤–∑–∞—î–º–æ–¥—ñ–á
@dp.message_handler (regexp=re.compile(r"^–ø—ñ—Ç–∏ –ø–æ–≥—É–ª—è—Ç–∏", re.IGNORECASE))
async def go_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üèÉ‚Äç‚ôÇÔ∏è | {user_name} –ø—ñ—à–æ–≤ –ø–æ–≥—É–ª—è—Ç–∏ —ñ–∑ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏", re.IGNORECASE))
async def love_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üòò | {user_name} –ø–æ—Ü—ñ–ª—É–≤–∞–≤(-–ª–∞) {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–æ–±—ñ–π–Ω—è—Ç–∏", re.IGNORECASE))
async def wite_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üíû|{user_name} –æ–±—ñ–π–Ω—è–≤ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–ø—Ä–∏–∂–∞—Ç–∏", re.IGNORECASE))
async def lover_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü§≤ | {user_name} –ø—Ä–∏–∂–∞–≤ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^—Ç—Ä–∞—Ö–Ω—É—Ç–∏", re.IGNORECASE))
async def sex_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} —Ç—Ä–∞—Ö–Ω—É–≤ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–≤—ñ–¥—Å–º–æ–∫—Ç–∞—Ç–∏", re.IGNORECASE))
async def suck_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} –≤—ñ–¥—Å–º–æ–∫—Ç–∞–ª–∞ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–≤—ñ–¥–ª–∏–∑–∞—Ç–∏", re.IGNORECASE))
async def sucking_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} –≤—ñ–¥–ª–∏–∑–∞–≤ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^—Ä–æ–∑–¥—è–≥–Ω—É—Ç–∏", re.IGNORECASE))
async def s_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} —Ä–æ–∑–¥—è–≥–Ω—É–≤(-–ª–∞) {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^—Ä–æ–∑–¥—è–≥–Ω—É—Ç–∏", re.IGNORECASE))
async def w_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} —Ä–æ–∑–¥—è–≥–Ω—É–≤(-–ª–∞) {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^—Ä–æ–∑–¥—è–≥–Ω—É—Ç–∏—Å—å", re.IGNORECASE))
async def p_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} —Ä–æ–∑–¥—è–≥–Ω—É–≤—Å—è(-–ª–∞—Å—å) {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–ø–æ–¥—Ä–æ—á–∏—Ç–∏", re.IGNORECASE))
async def t_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•µ | {user_name} –ø–æ–¥—Ä–æ—á–∏–≤(-–ª–∞) {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–¥–∞—Ç–∏ —à–æ–∫–æ–ª–∞–¥–∫—É", re.IGNORECASE))
async def choco_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üç´ | {user_name} –¥–∞–≤(-–ª–∞) —à–æ–∫–æ–ª–∞–¥–∫—É {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–∫–æ—Ö–∞—é", re.IGNORECASE))
async def lovely_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"ü•∞ | {user_name} –∫–æ—Ö–∞—î {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")


@dp.message_handler (regexp=re.compile(r"^—Å—ñ—Å—Ç–∏ –Ω–∞ –∫–æ–ª—ñ–Ω–∞", re.IGNORECASE))
async def set_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üòç | {user_name} —Å—ñ–ª–∞ –Ω–∞ –∫–æ–ª—ñ–Ω–∞ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–ø–æ—Ü—ñ–ª—É–≤–∞—Ç–∏ –∑–∞ —à–∏—é", re.IGNORECASE))
async def ka_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üåö | {user_name} –ø–æ—Ü—ñ–ª—É–≤–∞–≤(-–ª–∞) –∑–∞ —à–∏—é {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–∑–∞—Å–æ—Å–∞—Ç–∏", re.IGNORECASE))
async def ka_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üíù | {user_name} –∑–∞—Å–æ—Å–∞–≤(-–ª–∞) {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–¥–æ–±—Ä–∞–Ω—ñ—á", re.IGNORECASE))
async def kak_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üåö | {user_name} –ø–æ–±–∞–∂–∞–≤(-–ª–∞) —Å–ø–∞—Ç–∏ —Ñ–∞–π–Ω–æ {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

@dp.message_handler (regexp=re.compile(r"^–¥–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É", re.IGNORECASE))
async def ka_command_handler(message: types.Message):
    if message.reply_to_message is not None:
        replied_user_id = message.reply_to_message.from_user.id
        replied_user = await bot.get_chat_member(chat_id=message.chat.id, user_id=replied_user_id)
        replied_user_name = replied_user.user.first_name
        user_name = message.from_user.first_name
        await message.answer(f"üåö | {user_name} –ø—Ä–∏–≤—ñ—Ç–∞–≤—Å—è(-–ª–∞) –∑ –ø–æ—á–∞—Ç–∫–æ–º –¥–Ω–µ–º {replied_user_name}")
    else:
        await message.answer("–¶—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–∞ –ª–∏—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")


# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


